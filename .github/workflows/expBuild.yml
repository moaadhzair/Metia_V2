name: metia-build-exp

on:
  workflow_run:
    workflows: ["Bump Version on Commit"] # <-- Use the exact name of your version bump workflow
    types:
      - completed

jobs:
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Setup Flutter
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      - run: flutter pub get

      # Setup Java for Android
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - run: flutter build apk --release --split-per-abi

      - name: Upload Android APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/apk/release/

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: List available simulator runtimes
        run: xcrun simctl list runtimes

      - name: Show available Xcode versions
        run: ls /Applications | grep Xcode
      
      
      - name: Select Xcode 16.4
        run: sudo xcode-select -s "/Applications/Xcode_16.4.app"

      # Setup Flutter
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      - run: flutter pub get

      - run: pod repo update
        working-directory: ios

      - run: flutter build ios --release --no-codesign -xcconfig "IPHONEOS_DEPLOYMENT_TARGET=18.4"

      - run: mkdir Payload
        working-directory: build/ios/iphoneos

      - run: mv Runner.app Payload
        working-directory: build/ios/iphoneos

      - name: Zip iOS Output
        run: zip -qq -r -9 metia.ipa Payload
        working-directory: build/ios/iphoneos

      # --- Begin: Upload to ipasign.cc and poll for result ---
      - name: Sign IPA with ipasign.cc
        id: sign_ipa
        working-directory: build/ios/iphoneos
        run: |
          # Download the .mobileprovision file
          curl -L -o "profile.mobileprovision" "https://raw.githubusercontent.com/moaadhzair/TEMP-DOCS/refs/heads/main/China%20CITIC%20Bank%20Corporation%20Limited.mobileprovision"
          
          # Download the .p12 file
          curl -L -o "cert.p12" "https://raw.githubusercontent.com/moaadhzair/TEMP-DOCS/refs/heads/main/China%20CITIC%20Bank%20Corporation%20Limited.p12"
          
          # Check if metia.ipa exists in the current directory
          if [ ! -f "metia.ipa" ]; then
            echo "metia.ipa not found in the current directory. Exiting."
            exit 1
          fi
          
          response=$(curl -s -X POST "https://ipa.ipasign.cc/sign" \
              -F "ipa=@metia.ipa" \
              -F "p12=@cert.p12" \
              -F "mp=@profile.mobileprovision" \
              -F "password=AppleP12.com")
          
          echo "ipasign response: $response"
          task_id=$(echo "$response" | sed -n 's/.*"task_id":"\([^"]*\)".*/\1/p')
          echo "task_id=$task_id"
          
          # Poll for status
          for i in {1..60}; do
            status_response=$(curl -s "https://ipa.ipasign.cc/status/$task_id")
            status=$(echo "$status_response" | sed -n 's/.*"status":"\([^"]*\)".*/\1/p')
            echo "Status: $status"
            if [ "$status" = "SUCCESS" ]; then
              break
            elif [ "$status" = "FAILURE" ]; then
              echo "Signing failed"
              exit 1
            fi
            sleep 10
          done
          
          # Download signed IPA
          curl -L -o metia.signed.ipa "https://ipa.ipasign.cc/download_ipa/$task_id"
      # --- End: Upload to ipasign.cc and poll for result ---

      - name: Upload Signed iOS IPA as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa-signed
          path: build/ios/iphoneos/metia.signed.ipa

  release-ios:
    name: Create iOS Release
    runs-on: ubuntu-latest
    needs: [build-ios]
    if: success()
    steps:
      - uses: actions/checkout@v3

      - name: Get Version
        id: get_version
        run: |
          VERSION=$(cat pubspec.yaml | grep "version:" | cut -d'+' -f1 | cut -d' ' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Download iOS IPA
        uses: actions/download-artifact@v4
        with:
          name: ios-ipa-signed
          path: artifacts/ios/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          body: |
            ðŸš€ New Release
            
            ### Changes
            - iOS build available
            - Version: ${{ steps.get_version.outputs.version }}
            
            ### Downloads
            - iOS IPA available in the release assets
          files: |
            artifacts/ios/*.ipa
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-android:
    name: Update Release with Android
    runs-on: ubuntu-latest
    needs: [build-android, release-ios]
    if: success()
    steps:
      - uses: actions/checkout@v3

      - name: Get Version
        id: get_version
        run: |
          VERSION=$(cat pubspec.yaml | grep "version:" | cut -d'+' -f1 | cut -d' ' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Download Android APK
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: artifacts/android/

      - name: Update Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          body: |
            ðŸš€ New Release
            
            ### Changes
            - iOS and Android builds available
            - Version: ${{ steps.get_version.outputs.version }}
            
            ### Downloads
            - iOS IPA available in the release assets
            - Android APK available in the release assets
          files: |
            artifacts/android/*.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-json:
    name: Update JSON File
    runs-on: ubuntu-latest
    needs: [release-android]
    if: success()
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Version
        id: get_version
        run: |
          VERSION=$(cat pubspec.yaml | grep "version:" | cut -d'+' -f1 | cut -d' ' -f2)
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Download Latest IPA from Release
        run: |
          curl -L -o metia.ipa "https://github.com/moaadhzair/Metia_V2/releases/download/v${{ env.version }}/metia.signed.ipa"

      - name: Get IPA File Size
        id: get_size
        run: |
          FILE_SIZE=$(stat -c%s "metia.ipa")
          echo "size=$FILE_SIZE" >> $GITHUB_ENV

      - name: Update app.json
        run: |
          node -e '
          const fs = require("fs");
          const path = "SyncingStuff/app.json";
          let data = JSON.parse(fs.readFileSync(path, "utf8"));

          const newDate = new Date().toISOString();
          data.apps[0].version = process.env.version;
          data.apps[0].downloadURL = "https://github.com/moaadhzair/Metia_V2/releases/download/v" + process.env.version + "/metia.signed.ipa";
          data.apps[0].size = parseInt(process.env.size);
          data.apps[0].versionDate = newDate;

          fs.writeFileSync(path, JSON.stringify(data, null, 2));
          '
        env:
          version: ${{ env.version }}
          size: ${{ env.size }}

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add SyncingStuff/app.json
          git commit -m "Updated app.json with new IPA size and version date"
          git push
